[project]
name = "Sparkle"
version = "0.9.5.1"
description = """\
    Sparkle is a Programming by Optimisation (PbO)-based problem-solving \
    platform designed to enable the widespread and effective use of PbO \
    techniques for improving the state-of-the-art in solving a broad \
    range of prominent AI problems, including SAT and AI Planning. \
    """
requires-python = ">=3.10"
readme = "README.md"
license = "MIT"

authors = [
    { name = "Thijs Snelleman" },
    { name = "Jeroen Rook" },
    { name = "Koen van der Blom" },
    { name = "Jeremie Gobeil" },
    { name = "Chuan Luo" },
    { name = "Holger H. Hoos" },
]

maintainers = [
    { name = "Thijs Snelleman", email = "snelleman@aim.rwth-aachen.de" },
    { name = "Jeroen Rook", email = "FILL@ME.de" },
    { name = "Hadar Shavit", email = "shavit@aim.rwth-aachen.de" },
    { email = "sparkle@aim.rwth-aachen.de" },
]

keywords = [
    "algorithm",
    "configuration",
    "selection",
    "hyperparameter",
    "optimization",
    "empirical",
    "evaluation",
    "solver",
    "sat",
    "ai",
    "planning",
]

classifiers = [
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Natural Language :: English",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]

dependencies = [
    "numpy>=1.26.4",
    "pandas==2.3.2",
    "filelock==3.19.1",
    "smac==2.3.1",
    "RunRunner==0.2.0.4",
    "asf==0.1.3",
    "xgboost==2.1.3",
    "scikit-learn==1.3.2",
    "plotly==6.1.2",
    "kaleido==1.0.0",
    "pylatex==1.4.2",
    "tabulate==0.9.0",
    "pytermgui==7.7.2",
    "tqdm==4.66.5",
]

# To ensure package get shipped with data files
[build-system]
requires = [
    "setuptools>=64",
]
build-backend = "setuptools.build_meta"

[project.scripts]
sparkle = "sparkle.CLI._cli_:main"  # Enable 'sparkle [command]' from the command line

[project.urls]
Homepage = "https://github.com/ADA-research/Sparkle"
Documentation = "https://ada-research.github.io/Sparkle/"
Repository = "https://github.com/ADA-research/Sparkle"
Issues = "https://github.com/ADA-research/Sparkle/issues"
Changelog = "https://github.com/ADA-research/Sparkle/blob/main/CHANGELOG.md"

[tool.ruff]
# Line and docstring length
line-length = 89
indent-width = 4

# File excludes
exclude = [
    "src/sparkle/Components/runsolver/",
    "Examples/Resources/CVRP/",
    "Examples/Resources/CCAG/",
    "Examples/Resources/Solvers/CSCCSat/",
    "Examples/Resources/Solvers/PbO-CCSAT-Generic/",
    "Examples/Resources/Solvers/MiniSAT/",
    "Examples/Resources/MinVC/",
    "Examples/Resources/Extractors/",
    "Extractors/",
    "Instances/",
    "Solvers/",
    "Settings/",
    "Snapshots/",
    "Output/",
    "Tmp/",
    ".git",
    "__pycache__",
    ".pytest_cache",
]

# See https://docs.astral.sh/ruff/rules/
lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "D",   # pydocstyle (flake8-docstrings)
    "Q",   # flake8-quotes
    "S",   # flake8-bandit
    "N",   # pep8-naming
    "PTH", # flake8-use-pathlib
    "ANN", # flake8-annotations
]

# Ignored rules
lint.ignore = [
    "D401", # First line of docstring should be in imperative mood: "{first_line}"
    "D404", # First word of the docstring should not be "This"
    "D413", # Missing blank line after last section ("{name}")
    "D203", # 1 blank line required before class docstring
    "D204", # 1 blank line required after class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D300", # Use triple double quotes """
    "S605", "S607", "S404", "S603", "S311", "S310", # Certain Bandit rules
    "E401", # Multiple imports on one line
    "PTH201", # Do not pass the current directory explicitly to Path
    #"PTH116", # os.stat() should be replaced by Path.stat(), Path.owner(), or Path.group()
    #"PTH208", # Use `pathlib.Path.iterdir()` instead.
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `initial_values`
    "E501",   # Line too long ({width} > {limit})
]


# Per-file ignores
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"setup.py" = ["E501"]
"tests/*" = ["S101"]
"test/*" = ["S101"]
"src/sparkle/platform/settings_objects.py" = ["S110", "ANN401"]
"src/sparkle/tools/parameters.py" = ["S110"]
"src/sparkle/types/__init__.py" = ["S110", "S307", "F401"]
"src/sparkle/instance/__init__.py" = ["N802"]
"src/sparkle/configurator/implementations/__init__.py" = ["S307", "F401"]
"Documentation/source/userguide/conf.py" = ["PTH100"]
"Documentation/source/conf.py" = ["PTH100"]

[lint.mccabe]
max-complexity = 15

