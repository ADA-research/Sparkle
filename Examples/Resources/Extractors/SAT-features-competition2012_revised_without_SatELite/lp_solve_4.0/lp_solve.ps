%!PS-Adobe-3.0
%%Creator: groff version 1.18.1
%%CreationDate: Sun Nov 16 22:19:36 2003
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.18 1
%%Pages: 3
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.18 1
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/Fk{
setcmykcolor fill
}bind def
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/Ck/setcmykcolor load def
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 841.89 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron
/Zcaron/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(lp_solv)72 12 Q 2.58(e\255s)-.15 G(olv)-2.58 E
2.58(e\()-.15 G(mix)-2.58 E .08(ed inte)-.15 F .079
(ger\) linear programming problems)-.15 F/F1 10/Times-Bold@0 SF(lp_solv)
2.579 E(e)-.1 E F0([)2.579 E/F2 10/Times-Italic@0 SF(options)A F0 2.579
(][)C([<])-2.579 E F2(input-\214le)2.579 E F0 2.579(]-)C(v)-2.579 E F2
(le)A(vel)-.15 E F0 .079(Set v)2.579 F(erbosi-)-.15 E(ty:)72 24 Q
(-v0: CRITICALST)79.5 36 Q(OP)-.18 E(-v1: CRITICAL)79.5 48 Q
(-v2: SEVERE)79.5 60 Q(-v3: IMPOR)79.5 72 Q -.93(TA)-.6 G(NT \(def).93 E
(ault\))-.1 E(-v4: NORMAL)79.5 84 Q(-v5: DET)79.5 96 Q(AILED)-.93 E
(-v6: FULL)79.5 108 Q .319(If le)72 120 R -.15(ve)-.25 G 2.819(ln).15 G
.319(ot pro)-2.819 F .319(vided \(-v\) then -v4 \(NORMAL\) is assumed.)
-.15 F .32(-time Print CPU time to parse input and to calculate re-)
5.319 F 2.649(sult. -timeout)72 132 R F2(sec)2.649 E F0 -.35(Ti)2.649 G
.149(meout after).35 F F2(sec)2.649 E F0 .149
(seconds when not solution found.)2.649 F(-S)5.149 E F2(detail)A F0 .149
(Print solution. If)2.649 F F2(detail)2.648 E F0 .148(omitted, then)
2.648 F(-S2 is used.)72 144 Q(-S0: Print nothing)79.5 156 Q
(-S1: Only objecti)79.5 168 Q .3 -.15(ve v)-.25 H(alue)-.1 E(-S2: Obj v)
79.5 180 Q(alue+v)-.25 E(ariables \(def)-.25 E(ault\))-.1 E(-S3: Obj v)
79.5 192 Q(alue+v)-.25 E(ariables+constraints)-.25 E(-S4: Obj v)79.5 204
Q(alue+v)-.25 E(ariables+constraints+duals)-.25 E(-S5: Obj v)79.5 216 Q
(alue+v)-.25 E(ariables+constraints+duals+lp model)-.25 E(-S6: Obj v)
79.5 228 Q(alue+v)-.25 E(ariables+constraints+duals+lp model+scales)-.25
E .096(-h Help mode, prints the usage.)72 240 R .096(-d Deb)5.096 F .096
(ug mode, all intermediate results are printed, and the branch-and-boun\
d deci-)-.2 F .368(sions in case of \(mix)72 252 R .367(ed\) inte)-.15 F
.367(ger problems.)-.15 F .367(-min Minimize the objecti)5.367 F .667
-.15(ve f)-.25 H .367(unction. This is the def).15 F .367
(ault for MPS input.)-.1 F .161(In lp_solv)72 264 R 2.661(ef)-.15 G .161
(ormat you can specify minimization or maximization in the input \214le\
 as well. The command line option)-2.661 F -.15(ove)72 276 S 3.125
(rrides. -max).15 F .625(Maximize the objecti)3.125 F .925 -.15(ve f)
-.25 H .624(unction. This is the def).15 F .624(ault for lp_solv)-.1 F
3.124(ef)-.15 G .624(ormat input.)-3.124 F .624(In lp_solv)5.624 F 3.124
(ef)-.15 G(ormat)-3.124 E .077(you can specify minimization or maximiza\
tion in the input \214le as well. The command line option o)72 288 R
-.15(ve)-.15 G 2.578(rrides. -p).15 F(Only)2.578 E .454
(functional for pure LP problems. Print the v)72 300 R .454
(alues of the dual v)-.25 F .454(ariables. The)-.25 F 2.954(ya)-.15 G
.454(re named r_1 until r_XXXXX unless)-2.954 F .55
(speci\214ed by the user)72 312 R 5.55(.N)-.55 G .55
(ote that bounds \(constraints on just one v)-5.55 F .55
(ariable\) also ha)-.25 F .85 -.15(ve d)-.2 H .55(ual v).15 F .55
(alues though the)-.25 F 3.05(ya)-.15 G .55(re not)-3.05 F(gi)72 324 Q
-.15(ve)-.25 G 2.899(nar).15 G .899 -.25(ow i)-2.899 H 2.899(nt).25 G
.399(he matrix.)-2.899 F(-b)5.399 E F2(bound)2.899 E F0 .398
(Specify an upper \(when minimizing\) or lo)2.899 F .398
(wer \(when maximizing\) limit for the)-.25 F -.25(va)72 336 S 1.397
(lue of the objecti).25 F 1.697 -.15(ve f)-.25 H 1.397
(unction to the program. Only useful for \(mix).15 F 1.397(ed\) inte)
-.15 F 1.397(ger problems.)-.15 F 1.397(If close enough, may)6.397 F
.697(speed up the calculations. The same result can be obtained by addi\
ng an e)72 348 R .697(xtra constraint to the problem.)-.15 F .696
(-c When)5.696 F .445(branching in MILP problems, tak)72 360 R 2.945(et)
-.1 G .445(he ceiling of the selected non-inte)-2.945 F .445(ger v)-.15
F .445(ariable \214rst instead of the \215oor)-.25 F 2.945(.T)-.55 G
.445(his can)-2.945 F .216(in\215uence the speed of MILP problems.)72
372 R .216(-ca When branching in MILP problems, let the algorithm decid\
e if it should)5.216 F(tak)72 384 Q 3.681(et)-.1 G 1.181
(he \215oor or ceiling v)-3.681 F 1.182
(alue \214rst. This can in\215uence the speed of MILP problems.)-.25 F
(-B)6.182 E F2(rule)A F0 1.182(Specify branch-and-)3.682 F(bound rule:)
72 396 Q(-B0: Select Lo)79.5 408 Q(west inde)-.25 E -.15(xe)-.15 G 2.5
(dn).15 G(on-inte)-2.5 E(ger column \(def)-.15 E(ault\))-.1 E
(-B1: Select Random non-inte)79.5 420 Q(ger column)-.15 E
(-B2: Select Lar)79.5 432 Q(gest de)-.18 E(viation from an inte)-.25 E
(ger v)-.15 E(alue)-.25 E(-B3: Select Best ???)79.5 444 Q
(-B4: Select Median v)79.5 456 Q(alue de)-.25 E(viation from an inte)
-.25 E(ger v)-.15 E(alue)-.25 E(-B5: Select Greedy ???)79.5 468 Q(-e)72
480 Q F2 .31(value value)2.81 F F0 .31
(is the tolerance of the test for whether the v)2.81 F .31(alue of a v)
-.25 F .31(ariable is really inte)-.25 F(ger)-.15 E(.)-.55 E F2(value)
2.81 E F0 .31(must be between)2.81 F 2.837(0a)72 492 S .337(nd 0.5. Def)
-2.837 F .337(ault v)-.1 F .338(alue is 1e-6 and should be OK for most \
applications. Of course only useful for MILP problems.)-.25 F .883
(-i Print all intermediate v)72 504 R .883(alid solutions. Can gi)-.25 F
1.183 -.15(ve y)-.25 H .883(ou useful solutions e).15 F -.15(ve)-.25 G
3.383(ni).15 G 3.383(ft)-3.383 G .883(he total run time is too long.)
-3.383 F(Only)5.883 E(useful for \(mix)72 516 Q(ed\) inte)-.15 E
(ger problems.)-.15 E(-s[)5 E F2(mode)A F0 2.5(]U)C
(se automatic problem scaling:)-2.5 E(-s:)113 528 Q
(-s0: Numerical range-based scaling)110.5 540 Q(-s1: Geometric scaling)
110.5 552 Q(-s2: Curtis-reid scaling)110.5 564 Q .261(This might impro)
72 576 R .561 -.15(ve t)-.15 H .261
(he numerical stability of your problem.).15 F .262(-sp Also do po)5.262
F .262(wer scaling.)-.25 F .262(-sl Also do Lagrange scal-)5.262 F 3.007
(ing. -si)72 588 R .507(Also do Inte)3.007 F .507(ger scaling.)-.15 F
.507(-I Print info after rein)5.507 F -.15(ve)-.4 G 3.006(rting. -t).15
F -.35(Tr)3.006 G .506(ace pi).35 F -.2(vo)-.25 G 3.006(ts).2 G 3.006
(election. -lp)-3.006 F .506(Read from LP \214le \(de-)3.006 F -.1(fa)72
600 S 10.081(ult\). -mps).1 F 7.582
(Read from MPS \214le instead of lp \214le. F)10.081 F 7.582
(or a short introduction to MPS see)-.15 F 1.346
(http://users.iems.nwu.edu/~neos/mps_format.txt -parse_only P)72 612 R
1.346(arse input \214le b)-.15 F 1.345
(ut do not calculate \(ie check\).)-.2 F(-pre-)6.345 E(solv)72 624 Q 2.5
(eP)-.15 G(resolv)-2.5 E 2.5(ep)-.15 G(roblem before optimizing.)-2.5 E
(-impro)5 E -.15(ve)-.15 G F2(le).15 E(vel)-.15 E F0(Iterati)2.5 E .3
-.15(ve i)-.25 H(mpro).15 E -.15(ve)-.15 G(ment le).15 E -.15(ve)-.25 G
(l:).15 E(-impro)110.5 636 Q -.15(ve)-.15 G(0: none \(def).15 E(ault\))
-.1 E(-impro)110.5 648 Q -.15(ve)-.15 G(1: FTRAN only).15 E(-impro)110.5
660 Q -.15(ve)-.15 G(2: BTRAN only).15 E(-impro)110.5 672 Q -.15(ve)-.15
G(3: FTRAN + BTRAN).15 E(-de)72 684 Q .748
(gen Use random perturbations to reduce de)-.15 F(generac)-.15 E 2.049
-.65(y, c)-.15 H .749(an increase numerical instability).65 F 5.749(.-)
-.65 G(trej)-5.749 E F2 -1.77 -.55(Tr e)3.249 H(j).55 E F0 .749
(Set minimum)3.249 F(pi)72 696 Q -.2(vo)-.25 G 2.526(tv).2 G .026
(alue to)-2.776 F F2 -1.77 -.55(Tr e)2.526 H(j).55 E F0 5.026(.T)C .025
(he linear programming problem can be formulated as: Solv)-5.026 F 2.525
(eA)-.15 G .025(.x >= V1, with V2.x maximal. A)-2.525 F .368
(is a matrix, x a v)72 708 R .368(ector of \(nonne)-.15 F -.05(ga)-.15 G
(ti).05 E -.15(ve)-.25 G 2.868(\)v).15 G .369(ariables, V1 a v)-3.118 F
.369(ector called the right hand side, and V2 a v)-.15 F .369
(ector specifying)-.15 F(the objecti)72 720 Q .3 -.15(ve f)-.25 H
(unction.).15 E(An)72 732 Q 2.5(yn)-.15 G(umber of the v)-2.5 E
(ariables may be speci\214ed to be of type inte)-.25 E(ger)-.15 E(.)-.55
E .079(This program solv)72 744 R .079
(es problems of this kind. It is slightly more general than the abo)-.15
F .378 -.15(ve p)-.15 H .078(roblem, in that e).15 F -.15(ve)-.25 G .078
(ry ro).15 F 2.578(wo)-.25 G 2.578(fA)-2.578 G
(\(specifying one constraint\) can ha)72 756 Q .3 -.15(ve i)-.2 H(ts o)
.15 E(wn \(in\)equality)-.25 E 2.5(,<)-.65 G
(=, >= or =. The result speci\214es v)-2.5 E(alues for all v)-.25 E
(ariables.)-.25 E .215(Uses a 'Simple)72 768 R .215
(x' algorithm and sparse matrix methods, for pure LP problems.)-.15 F
.216(If one or more of the v)5.216 F .216(ariables is de-)-.25 F .596
(clared inte)72 780 R(ger)-.15 E 3.096(,t)-.4 G .596(he Simple)-3.096 F
3.096(xa)-.15 G .596(lgorithm is iterated with a branch and bound algor\
ithm, until the desired optimal solu-)-3.096 F(tion is found.)72 792 Q 0
Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF .484
(The "-i" option will print all intermediate v)72 12 R .484
(alid solutions.)-.25 F .484(The def)5.484 F .484
(ault input syntax is a set of algebraic e)-.1 F(xpressions)-.15 E
(and "int" declarations in the follo)72 24 Q(wing order:)-.25 E
(<objecti)72 48 Q .3 -.15(ve f)-.25 H(unction>).15 E(<constraint>*)72 60
Q(<declaration>*)72 72 Q .396(where: - <objecti)72 96 R .696 -.15(ve f)
-.25 H .396(unction> is a linear combination of v).15 F .395
(ariables, ending with a semicolon, optionally preceded by)-.25 F .134
("max: " or "min: " to indicate whether you w)72 108 R .134
(ant it to be minimized or maximized. The case is not important, "Max:")
-.1 F .81(or "MAX:" will w)72 120 R .809
(ork as well. Maximization is the def)-.1 F .809(ault. Alternati)-.1 F
-.15(ve)-.25 G 3.309(sa).15 G .809
(re minimise, minimize, maximise, Maxi-)-3.309 F .836
(mize - <constraint> is an optional constraint name follo)72 132 R .837
(wed by a colon plus a linear combination of v)-.25 F .837(ariables and)
-.25 F .402(constants or \(just one\) constraint name follo)72 144 R
.402(wed by a colon \(a range\) or \(just one\) v)-.25 F .402
(ariable name without a colon \(a)-.25 F .285(bound\), follo)72 156 R
.285(wed by a relational operator)-.25 F 2.785(,f)-.4 G(ollo)-2.785 E
.285(wed ag)-.25 F .285(ain by a linear combination of v)-.05 F .285
(ariables and constants, ending)-.25 F .382
(with a semicolon. The relational operator can be an)72 168 R 2.882(yo)
-.15 G 2.882(ft)-2.882 G .381(he follo)-2.882 F .381
(wing: "<" "<=" "=" ">" ">=". There is no semantic)-.25 F(dif)72 180 Q
.573(ference between "<" and "<=" nor between ">" and ">=" \(e)-.25 F
-.15(ve)-.25 G 3.073(nf).15 G .573(or inte)-3.073 F .573(ger v)-.15 F
3.073(ariables!\). -)-.25 F .573(<declaration> is of one)3.073 F
(of the forms:)72 192 Q("int" v)79.5 204 Q(ar+ ";" Commas are allo)-.25
E(wed between v)-.25 E(ariables.)-.25 E -.15(Fo)117 216 S 2.5(ral).15 G
(ist of inte)-2.5 E(ger v)-.15 E(ariables.)-.25 E("sec" v)79.5 228 Q
(ar+ ";" Commas are allo)-.25 E(wed between v)-.25 E(ariables.)-.25 E
-.15(Fo)117 240 S 2.989(ral).15 G .489(ist of semi-continuous v)-2.989 F
2.989(ariables. -)-.25 F(A)2.989 E/F1 10/Times-Italic@0 SF(var)2.989 E
F0 .488(must start with a letter \(either upper or lo)2.988 F .488
(wer case\), and)-.25 F .552(may contain an)72 252 R 3.052(yn)-.15 G
.553(umber of additional letters, numerals, or characters from this lis\
t: _[]{}/.&#$%~'@^ - Comments)-3.052 F .649
(can be used with the /* */ syntax, just lik)72 264 R 3.149(ei)-.1 G
3.149(nC)-3.149 G 5.649(.I)-3.149 G 3.149(tc)-5.649 G .649(an be put an)
-3.149 F .649(ywhere in the \214le and e)-.15 F -.15(ve)-.25 G 3.148(no)
.15 G -.15(ve)-3.298 G 3.148(rm).15 G .648(ultiple lines.)-3.148 F(-)
5.648 E(Empty lines are also allo)72 276 Q(wed.)-.25 E
(So, the simplest linear problem consists of an objecti)72 300 Q .3 -.15
(ve f)-.25 H 2.5(unction. The).15 F(simple problem:)2.5 E(x1 >= 1)72 324
Q(x2 >= 1)72 336 Q(x1 + x2 >= 2)72 348 Q
(minimize x1 + x2 \(= maximize -\(x1 + x2\)\), with x1 inte)72 360 Q
(ger)-.15 E(can be written as follo)72 384 Q(ws:)-.25 E(-x1 -x2;)72 408
Q(\(or min: x1 + x2;\))72 420 Q(x1 > 1;)72 432 Q(x2 > 1;)72 444 Q
(x1 + x2 > 2;)72 456 Q(int x1;)72 468 Q
(The correct result for \(x1, x2\) is of course \(1, 1\).)72 492 Q -.4
(Wi)72 504 S .706(th the -mps option,).4 F/F2 10/Times-Bold@0 SF
(lp_solv)3.206 E(e)-.1 E F0 .706(will accept MPS as input format.)3.206
F 3.206(-S)5.706 G .707(ometimes problems are numerically unstable,)
-3.206 F .128(and the una)72 516 R -.2(vo)-.2 G .128
(idable rounding errors inside).2 F F2(lp_solv)2.628 E(e)-.1 E F0 .128
(will cause aborts. It is v)2.628 F .128(ery hard to gi)-.15 F .428 -.15
(ve g)-.25 H .127(eneral solutions to this).15 F .415(problem, b)72 528
R .416(ut try to k)-.2 F .416(eep all v)-.1 F .416(alues in your proble\
m in the order of magnitude of 1 by proper scaling. This is almost)-.25
F(al)72 540 Q -.1(wa)-.1 G .773(ys better than using).1 F F2(lp_solv)
3.273 E(e)-.1 E F0 3.273(sb)C .773(uilt-in scaling \(with -s\). Almost \
parallel constraints are also not v)-3.473 F .773(ery good for)-.15 F
.026(numerical stability)72 552 R 2.526(.U)-.65 G .026(se "lp_solv)
-2.526 F 2.526(e-)-.15 G .026(v" and observ)-2.526 F 2.526(et)-.15 G
.026(he v)-2.526 F .026(alues of the pi)-.25 F -.2(vo)-.25 G .026
(ts to see if there are an).2 F 2.526(yd)-.15 G .026(angerously lar)
-2.526 F .026(ge or)-.18 F(lo)72 564 Q 2.5(wn)-.25 G(umbers there.)-2.5
E(Building)72 576 Q F2(lp_solv)3.753 E(e)-.1 E F0 1.253
(with long doubles \(see the Mak)3.753 F 1.253
(e\214le\) can help to increase numerical stability)-.1 F 3.753(,b)-.65
G 1.253(ut will also in-)-3.953 F(crease the run time considerably)72
588 Q(.)-.65 E -1.1(Yo)72 600 S 2.851(uc)1.1 G .351
(an consult the author as well if you encounter numerical problems, b)
-2.851 F .352(ut please remember that it is v)-.2 F .352(ery easy to)
-.15 F .791
(formulate an infeasible LP problem, so be sure there is a solution.)72
612 R .791(The implementation of the simple)5.791 F 3.291(xk)-.15 G .791
(ernel w)-3.391 F(as)-.1 E(mainly based on:)72 624 Q 1.84 -.92(W. O)72
636 T(rchard-Hays: "Adv).92 E(anced Linear Programming Computing T)-.25
E(echniques", McGra)-.7 E(w-Hill 1968)-.15 E(The mix)72 648 Q(ed inte)
-.15 E(ger branch and bound part w)-.15 E(as inspired by:)-.1 E 1.113(s\
ection 6.4 of "An Introduction to Linear Programming and Game Theory" b\
y P)72 660 R 1.114(aul R. Thie, second edition pub-)-.15 F
(lished by John W)72 672 Q(ile)-.4 E 2.5(ya)-.15 G(nd Sons in 1988.)-2.5
E(This book refers to:)72 684 Q .467(Dakin, R.J., "A T)72 696 R .467(re\
e Search Algorithm for MILP Problems", Comput. J., 8 \(1965\) pp. 250-2\
55 The w)-.35 F .466(ork of Jeroen)-.1 F .676
(Dirks made the transition from the basic v)72 708 R .676
(ersion 1.5 to the full v)-.15 F .676(ersion 2.0 possible. He contrib)
-.15 F .677(uted the procedural)-.2 F(interf)72 720 Q .86(ace, a b)-.1 F
.86(uilt-in MPS reader)-.2 F 3.36(,a)-.4 G .86(nd man)-3.36 F 3.36<798c>
-.15 G -.15(xe)-3.36 G 3.36(sa).15 G .86(nd enhancements to the code.)
-3.36 F .86(Most of the changes between 3.2)5.86 F
(and 4.0 were done by Kjell Eikland and Peter Notebaert.)72 732 Q
(M.R.C.M. Berk)5 E(elaar)-.1 E(Eindho)72 744 Q -.15(ve)-.15 G 2.5(nU).15
G(ni)-2.5 E -.15(ve)-.25 G(rsity of T).15 E(echnology)-.7 E
(Design Automation Section)72 756 Q -1.11(P.)72 768 S(O. Box 513)1.11 E
(NL-5600 MB Eindho)72 780 Q -.15(ve)-.15 G(n, The Netherlands).15 E
(phone +31-40-2474792)72 792 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(E-mail: michel@es.ele.tue.nl Use at o)72 12 Q
(wn risk. Bug reports are welcome, as well as success stories.)-.25 E 0
Cg EP
%%Trailer
end
%%EOF
